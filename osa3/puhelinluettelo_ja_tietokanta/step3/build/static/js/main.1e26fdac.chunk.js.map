{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","person","delete","id","put","Filter","props","text","value","onChange","Button","type","label","App","useState","persons","setPersons","useEffect","personService","console","log","newName","setNewName","newNumber","setNewNumber","nameFilter","filterNames","showErrorMessage","setErrorMessage","showOkMessage","setOkMessage","Person","deletePerson","name","toLowerCase","indexOf","number","onClick","message","className","event","target","onSubmit","preventDefault","found","forEach","item","index","window","confirm","personObject","content","setTimeout","catch","error","concat","map","key","resp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e26fdac.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAllPersons = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst createPerson = newObject => {\n // console.log(newObject)\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = person => {\n   const request = axios.delete(baseUrl+\"/\"+person.id)\n   return request.then(response => response.data)\n }\n\n const updatePersonNumber = newObject => {\n  const request = axios.put(baseUrl+\"/\"+newObject.id, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { \n  getAllPersons: getAllPersons, \n  createPerson: createPerson, \n  deletePerson: deletePerson, \n  updatePersonNumber: updatePersonNumber,\n}\n","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport './index.css'\n\nconst Filter = (props) => {\n  return (\n    <div>{props.text}<input value={props.value} onChange={props.onChange}/></div>\n  )\n}\n\nconst Button = (props) => (\n  <button type={props.type}>{props.label}</button>\n)\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n\n  const NotificationError = ({ message }) => {\n    console.log(message)\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\n  const NotificationOk = ({ message }) => {\n    console.log(message)\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"ok\">\n        {message}\n      </div>\n    )\n  }\n\n  useEffect(() => {\n    personService\n      .getAllPersons()\n      .then(response => {\n        console.log(\"getAllPersons \", response)\n        console.log('promise fulfilled')\n        setPersons(response)\n      })\n  }, [])\n// console.log('render', persons.length, 'persons')\n\nconst deletePerson = person => {\n  if (window.confirm(`Do you really want to remove ${person.name} ?`)) \n  { \n  personService\n      .deletePerson(person)\n      .then(resp => {\n        personService\n        .getAllPersons()\n        .then(response => {\n          setPersons(response)\n\n          setOkMessage(\n            `User ${person.name} deleted succesfully`\n          )\n          setTimeout(() => {\n            setOkMessage(null)\n          }, 3000)\n        })\n      })\n    }\n}\n\n  const [newName, setNewName ] = useState('') \n  const [newNumber, setNewNumber ] = useState('') \n  const [nameFilter, filterNames ] = useState('') \n  const [showErrorMessage, setErrorMessage] = useState(null)\n  const [showOkMessage, setOkMessage] = useState(null)\n\n  const Person = ({ person, deletePerson}) => {\n //   console.log(person)\n    let name = person.name.toLowerCase(person);\n    let result = name.indexOf(nameFilter);\n    if(result > -1)\n    {\n      return (\n        <div>{person.name} {person.number} <button onClick={deletePerson}>Delete</button></div>\n      )\n    }\n    else{ return ( <div></div>) }\n  }\n\n  const rows = () => persons.map(person =>{\n  //  console.log(\"rows\", person)\n    return(\n    <Person\n      key={person.name}\n      person={person}\n      deletePerson={() => deletePerson(person)}\n    />)\n  }\n  )\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    let found = false\n    persons.forEach(function(item, index) \n    {\n      if(item.name === newName)\n      {\n        found = true\n        if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one`)) \n        { \n          const personObject = {\n            id: item.id,\n            content: \"content\",\n            name: item.name,\n            number: newNumber\n          }\n        \n          personService\n          .updatePersonNumber(personObject)\n          .then(response => {\n            personService\n            .getAllPersons()\n            .then(response => {\n              setPersons(response)\n\n              setOkMessage(\n                `User ${personObject.name} phonenumber changed succesfully`\n              )\n              setTimeout(() => {\n                setOkMessage(null)\n              }, 3000)\n            })\n          })\n          .catch(error => {\n            setErrorMessage(\n              `Information from user ${personObject.name} has already been deleted from server`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 3000)\n          })\n        }\n      }\n    });\n\n    if(found === false)\n    {\n      const personObject = {\n        content: \"content\",\n        name: newName,\n        number: newNumber\n      }\n    \n      personService\n      .createPerson(personObject)\n      .then(response => {\n        setPersons(persons.concat(response))\n        setNewName ('')\n        setNewNumber ('')\n\n        setOkMessage(\n          `User ${personObject.name} added succesfully`\n        )\n        setTimeout(() => {\n          setOkMessage(null)\n        }, 3000)\n\n      })\n    }\n  }\n\n  const handlePersonChange = (event) => {\n    console.log(event.target.value)\n    setNewName (event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber (event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    filterNames (event.target.value)\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <NotificationError message={showErrorMessage} />\n      <NotificationOk message={showOkMessage} />\n      <Filter value={nameFilter} onChange={handleFilterChange} text=\"filter shown with:\"/>\n      <form onSubmit={addPerson}>\n      <h1>add a new</h1>\n      name:<input\n          value={newName}\n          onChange={handlePersonChange}\n        /><br />\n      number:<input\n          value={newNumber}\n          onChange={handleNumberChange}\n        /><br />\n        <Button type=\"submit\" label=\"add\"/>\n      </form>    \n      <h1>Numbers</h1> \n      {rows()}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}